/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

    class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> res = new ArrayList<>();
        if(root==null)
            return res;
        Queue<TreeNode> Queue = new LinkedList<>();
        Queue.offer(root);
        while(!Queue.isEmpty())
        {
            int size = Queue.size();
            int r = Queue.peek().val;
            while(size-- > 0)
            {
                TreeNode temp = Queue.poll();
                r = temp.val;
                if(temp.left != null)
                    Queue.offer(temp.left);
                if(temp.right != null)
                    Queue.offer(temp.right);
            }
            res.add(r);
        }
        return res;
    }
}