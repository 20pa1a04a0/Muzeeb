/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
     List<String> result=new ArrayList<>();
        if(root!=null)
            preorder(root,result,"");
        return result;
    }
    void preorder(TreeNode root,List<String> result,String s)
    {
        if(root==null)
            return;
        if(s.isEmpty())
            s+=root.val;
        else s+=("->"+root.val);
        if(root.left!=null||root.right!=null)
        {
            preorder(root.left,result,s);
            preorder(root.right,result,s);
        }
        else
            result.add(s);
    }
}